<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>走在路上</title>
  
  <subtitle>再見</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wongb.in/"/>
  <updated>2017-12-27T02:49:42.190Z</updated>
  <id>http://wongb.in/</id>
  
  <author>
    <name>Bynn</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo标签页生成</title>
    <link href="http://wongb.in/2017/12/26/Test/"/>
    <id>http://wongb.in/2017/12/26/Test/</id>
    <published>2017-12-26T14:26:46.000Z</published>
    <updated>2017-12-27T02:49:42.190Z</updated>
    
    <content type="html"><![CDATA[<!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --><!-- 其中 class="blockquote-center" 是必须的 --><!--blockquote class="blockquote-center">Hexo标签页生成的详细教程，附官方说明文档</blockquote--><div class="note success"><p>Hexo标签页生成的详细教程，附官方说明文档 </p></div><a id="more"></a><p>代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line">     - 前端</span><br><span class="line">     - hexo</span><br><span class="line">     categories: </span><br><span class="line">     - 前端</span><br></pre></td></tr></table></figure></p><p>在博客根目录输入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page tags</span><br></pre></td></tr></table></figure><p>打开 tags/index.md ，并改成：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 标签</span><br><span class="line">date: 日期</span><br><span class="line">type: <span class="string">"tags"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>分类同理</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> page categories</span><br></pre></td></tr></table></figure><p>打开category/index.md，改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 日期</span><br><span class="line">type: <span class="string">"categories"</span></span><br><span class="line">comments: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>附上文档<a href="https://hexo.io/zh-cn/docs/front-matter.html" target="_blank" rel="noopener">Front-matter</a></p>]]></content>
    
    <summary type="html">
    
      &lt;!-- HTML方式: 直接在 Markdown 文件中编写 HTML 来调用 --&gt;
&lt;!-- 其中 class=&quot;blockquote-center&quot; 是必须的 --&gt;
&lt;!--blockquote class=&quot;blockquote-center&quot;&gt;Hexo标签页生成的详细教程，附官方说明文档&lt;/blockquote--&gt;
&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;Hexo标签页生成的详细教程，附官方说明文档 &lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://wongb.in/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>HTTP+SSL</title>
    <link href="http://wongb.in/2017/12/22/http%E8%BD%AChttps/"/>
    <id>http://wongb.in/2017/12/22/http转https/</id>
    <published>2017-12-22T14:50:21.000Z</published>
    <updated>2017-12-27T02:58:13.901Z</updated>
    
    <content type="html"><![CDATA[<div class="note danger"><p>云ESC部署SSL详细方法 </p></div><a id="more"></a><ul><li><p>系统CentOS 7.3 64位  + 环境 Nginx   采用LNMP一键包</p></li><li><p>免费SSL  腾讯 阿里都提供 以腾讯云为例 TrustAsia TLS RSA CA </p></li><li><p>直接申请验证域名信息即可 获取不同环境的crt key</p></li></ul><h3 id="第一步、部署HTTPS基础准备"><a href="#第一步、部署HTTPS基础准备" class="headerlink" title="第一步、部署HTTPS基础准备"></a>第一步、部署HTTPS基础准备</h3><pre><code>　申请SSL 了解直接服务器部署环境 选择对应的</code></pre><h3 id="第二步-上传和部署SSL证书"><a href="#第二步-上传和部署SSL证书" class="headerlink" title="第二步 上传和部署SSL证书"></a>第二步 上传和部署SSL证书</h3><blockquote><p>A - 把上面的一个CRT一个KEY文件上传到VPS<br>    　ROOT目录中，然后对应修改成SSL.CRT和SSL.KEY文件名，或者我们用作其他命令都可以。</p><p>B - 解密私钥和设置权限</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -<span class="keyword">in</span> ssl.key -out /root/ssl.key</span><br><span class="line">chmod <span class="number">600</span> /root/ssl.key</span><br></pre></td></tr></table></figure><blockquote><p>登录SSH，执行上述两行脚本，解密私钥和授权。</p></blockquote><hr><h3 id="第三步-在LNMP环境部署站点SSL设置"><a href="#第三步-在LNMP环境部署站点SSL设置" class="headerlink" title="第三步 在LNMP环境部署站点SSL设置"></a>第三步 在LNMP环境部署站点SSL设置</h3><blockquote><p>我们需要在已有的LNMP添加了站点，然后在站点对应的CONF文件设置。</p><p>在”/usr/local/nginx/conf/vhost/“目录文件中，找到对应站点的conf文件，然后修改设置如下</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">       listen <span class="number">80</span>;</span><br><span class="line">       listen 443 ssl;                            #1</span><br><span class="line">       #listen [::]:80;                           </span><br><span class="line">       ssl on;                                    #2</span><br><span class="line">       ssl_certificate /root/ssl.crt;             #3</span><br><span class="line">       ssl_certificate_key /root/ssl.key;         #4</span><br><span class="line">       server_name <span class="number">1114.</span>me www<span class="number">.1114</span>.me;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><font color="#FF0000"> 上面的#1 2 3 4标注部分是需要我们添加的，对应路径我们要与之前上传的CRT和KEY文件路径对应以及文件名不要搞错。 </font> </blockquote><hr><p>补充官方说明：</p><blockquote><p>Nginx 证书部署<br>获取证书<br>Nginx文件夹内获得SSL证书文件 1_www.domain.com_bundle.crt 和私钥文件 2_www.domain.com.key,<br>1_www.domain.com_bundle.crt 文件包括两段证书代码 “—–BEGIN CERTIFICATE—–”和“—–END CERTIFICATE—–”,<br>2_www.domain.com.key 文件包括一段私钥代码“—–BEGIN RSA PRIVATE KEY—–”和“—–END RSA PRIVATE KEY—–”。</p><p>证书安装</p></blockquote><font color="#FF3300">将域名www.domain.com的证书文件1_www.domain.com_bundle.crt 、私钥文件2_www.domain.com.key保存到同一个目录，例如/usr/local/nginx/conf目录下。<br>更新Nginx根目录下 conf/nginx.conf 文件如下： </font> <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen <span class="number">443</span>;</span><br><span class="line">        server_name www.domain.com; #填写绑定证书的域名</span><br><span class="line">        ssl on;</span><br><span class="line">        ssl_certificate <span class="number">1</span>_www.domain.com_bundle.crt;</span><br><span class="line">        ssl_certificate_key <span class="number">2</span>_www.domain.com.key;</span><br><span class="line">        ssl_session_timeout <span class="number">5</span>m;</span><br><span class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html; #站点目录</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><p>配置完成后，先用bin/nginx -t来测试下配置是否有误，正确无误的话，重启nginx。就可以使 <a href="http://www.1114.me" target="_blank" rel="noopener">http://www.1114.me</a> 来访问了。</p><hr><ul><li>注：</li></ul><table><thead><tr><th style="text-align:center">配置文件参数</th><th style="text-align:center">标准</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">listen 443</td><td style="text-align:center"></td><td style="text-align:center">SSL访问端口号为443</td></tr><tr><td style="text-align:center">ssl on</td><td style="text-align:center"></td><td style="text-align:center">启用SSL功能</td></tr><tr><td style="text-align:center">ssl_certificate</td><td style="text-align:center"></td><td style="text-align:center">证书文件</td></tr><tr><td style="text-align:center">ssl_certificate_key</td><td style="text-align:center"></td><td style="text-align:center">私钥文件</td></tr><tr><td style="text-align:center">ssl_protocols</td><td style="text-align:center"></td><td style="text-align:center">使用的协议</td></tr><tr><td style="text-align:center">ssl_ciphers</td><td style="text-align:center"></td><td style="text-align:center">配置加密套件，写法遵循openssl标准</td></tr></tbody></table><blockquote><p>最后，我们重启LNMP，可以看到SSL证书生效，且HTTPS可以访问站点。<br>重启LNMP命令</p></blockquote><ul><li><p>使用全站加密，http自动跳转https（可选）<br>对于用户不知道网站可以进行https访问的情况下，让服务器自动把http的请求重定向到https。<br>在服务器这边的话配置的话，可以在页面里加js脚本，也可以在后端程序里写重定向，当然也可以在web服务器来实现跳转。Nginx是支持rewrite的（只要在编译的时候没有去掉pcre）<br>在http的server里增加rewrite ^(.*) <a href="https://$host$1" target="_blank" rel="noopener">https://$host$1</a> permanent;<br>这样就可以实现80进来的请求，重定向为https了。</p></li><li><p>像这样就可以了</p></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen <span class="number">443</span>;</span><br><span class="line">    server_name <span class="number">1114.</span>me www<span class="number">.1114</span>.me;</span><br><span class="line">    ssl on;</span><br><span class="line">    root html;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">        ssl_certificate /root/ssl.pem;</span><br><span class="line">        ssl_certificate_key /root/ssl.key;</span><br><span class="line">        ssl_session_timeout <span class="number">5</span>m;</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">        ssl_protocols TLSv1 TLSv1<span class="number">.1</span> TLSv1<span class="number">.2</span>;</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root html;(<span class="regexp">/EG/</span>EG/站点目录)</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果想要强制 HTTPS，请做如下修改：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name 1114.me www.1114.me;                 # 修改为你的域名</span><br><span class="line">    rewrite ^/(.*) https://www.1114.me/$1 permanent; # 如果你的网站是带 www 的，请在域名前添加 www</span><br><span class="line">&#125;</span><br><span class="line">-------------------------------------------------------------------------------server                  #接上段配置即可</span><br><span class="line">&#123;</span><br><span class="line">    listen <span class="number">443</span>;</span><br><span class="line">    # ...... 其余配置同上</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>LNMP状态管理命令：</p></blockquote><p>   LNMP状态管理： /root/lnmp {start|stop|reload|restart|kill|status}</p><p>   Nginx状态管理：/etc/init.d/nginx {start|stop|reload|restart}</p><p>   MySQL状态管理：/etc/init.d/mysql {start|stop|restart|reload|force-reload|status}</p><p>   Memcached状态管理：/etc/init.d/memcached {start|stop|restart}</p><p>   PHP-FPM状态管理：/etc/init.d/php-fpm {start|stop|quit|restart|reload|logrotate}</p><p>   PureFTPd状态管理： /etc/init.d/pureftpd {start|stop|restart|kill|status}</p><p>   ProFTPd状态管理： /etc/init.d/proftpd {start|stop|restart|reload}</p><ul><li>如重启LNMP，输入命令：/root/lnmp restart 即可，单独重启mysql：/etc/init.d/mysql restart</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note danger&quot;&gt;&lt;p&gt;云ESC部署SSL详细方法 &lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="SSL" scheme="http://wongb.in/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Diary</title>
    <link href="http://wongb.in/2017/12/17/test-new-blog/"/>
    <id>http://wongb.in/2017/12/17/test-new-blog/</id>
    <published>2017-12-17T14:54:13.000Z</published>
    <updated>2017-12-27T02:57:59.069Z</updated>
    
    <content type="html"><![CDATA[<div class="note primary"><p>纯粹的写作产品 </p></div><a id="more"></a><p> 　　浏览网页偶然看到一个博客主题很简约，去掉多余的功能，大量留白，剩下的空间书写，<br>  就像在写纸质日记一样，这感觉很 <code>奇特</code>！ 比用简书 Wordpress之流显得高了不止一筹。</p><h2 id="喜欢这种纯粹的产品"><a href="#喜欢这种纯粹的产品" class="headerlink" title="喜欢这种纯粹的产品"></a>喜欢这种纯粹的产品</h2><h3 id="所以有一个搭建的想法"><a href="#所以有一个搭建的想法" class="headerlink" title="所以有一个搭建的想法"></a>所以有一个搭建的想法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">说做就做 查阅了一下资料，是利用Hexo 把写的代码渲染成 静态网页</span><br></pre></td></tr></table></figure><p>  所有的东西都由创作者自由编辑，和自己在服务器搭建个人博客没什么<code>两样</code></p><h3 id="完全自主"><a href="#完全自主" class="headerlink" title="完全自主"></a>完全自主</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">享受写作的快乐</span><br></pre></td></tr></table></figure><pre><code>但是需要一定代码基础包括前端技术，作为一个只会增删补改的射击师，还是有点挑战，</code></pre><p>   总能放弃吧，碰到了很多问题，Google到了答案，经过两天的摸索，终于大概怎么去部署<br>   Hexo+GitHub安装插件了，由于对Linux不是特别熟悉，在服务器搭建走了不少弯路，建议，先在本地搭建，对服务器不熟的建议选择Ubuntu，环境比Centos好很多免得很多东西没安装会报错，别问我为什么喜欢Centos，喜欢纯粹的系统QAQ</p><h3 id="Git版本控制-Github远程仓库"><a href="#Git版本控制-Github远程仓库" class="headerlink" title="Git版本控制 Github远程仓库"></a>Git版本控制 Github远程仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">先了解基础的概念再上手 会比较容易</span><br></pre></td></tr></table></figure><p>  回过头，想想，其实也不难，环境不同，工具不同，遇到问题，这很正常，<br>通常Google下都会有相关解答，看下，问题产生在哪里，怎么解决问题，解决的思路，以及为什么要这么做，而不是死记硬背硬套，一时解决问题！</p><h3 id="Stay-Hungry-Stay-Foolish"><a href="#Stay-Hungry-Stay-Foolish" class="headerlink" title="Stay Hungry Stay Foolish"></a>Stay Hungry Stay Foolish</h3><p>  最后给用腾讯云Centos7.X的童鞋<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$  npm install -g hexo-cli</span><br><span class="line">  先yum -y install openssl</span><br></pre></td></tr></table></figure></p><p>  这个困扰我半个小时QAQ 其他命令官网都有说明<br>  英文不太好的童鞋 eg me 可以用Chrome 右键翻译为汉语</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note primary&quot;&gt;&lt;p&gt;纯粹的写作产品 &lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="日记" scheme="http://wongb.in/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>image</title>
    <link href="http://wongb.in/2017/12/17/hello-world/"/>
    <id>http://wongb.in/2017/12/17/hello-world/</id>
    <published>2017-12-17T06:33:32.000Z</published>
    <updated>2017-12-27T03:05:31.904Z</updated>
    
    <content type="html"><![CDATA[<div class="note warning"><p>七牛图床 实名认证也就算了<br>                  还要手持身份证 WTF<br>                  有一种<code>裸贷</code>的感觉</p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note warning&quot;&gt;&lt;p&gt;七牛图床 实名认证也就算了&lt;br&gt;                  还要手持身份证 WTF&lt;br&gt;                  有一种&lt;code&gt;裸贷&lt;/code&gt;的感觉&lt;/p&gt;&lt;/div&gt;

      
    
    </summary>
    
    
      <category term="Test" scheme="http://wongb.in/tags/Test/"/>
    
  </entry>
  
</feed>
